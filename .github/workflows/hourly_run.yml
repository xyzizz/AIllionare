name: AI Trading Bot - Scheduled Execution

on:
  schedule:
    - cron: "0 0,13 * * 1-5" # 每天0点、13点执行

  workflow_dispatch: # 手动触发


jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Try to use Docker image
        id: try-docker
        run: |
          if docker pull ghcr.io/${{ github.repository }}:master 2>/dev/null; then
            echo "using_docker=true" >> $GITHUB_OUTPUT
            docker run --rm \
              -e PUSHPLUS_TOKEN="${{ secrets.PUSHPLUS_TOKEN }}" \
              -e TARGET_STOCK="${{ secrets.TARGET_STOCK }}" \
              -e TRADE_QUANTITY="${{ secrets.TRADE_QUANTITY }}" \
              -e DEEPSEEK_API_KEY="${{ secrets.DEEPSEEK_API_KEY }}" \
              -e LONGBRIDGE_APP_KEY="${{ secrets.LONGBRIDGE_APP_KEY }}" \
              -e LONGBRIDGE_APP_SECRET="${{ secrets.LONGBRIDGE_APP_SECRET }}" \
              -e LONGBRIDGE_ACCESS_TOKEN="${{ secrets.LONGBRIDGE_ACCESS_TOKEN }}" \
              ghcr.io/${{ github.repository }}:master
          else
            echo "using_docker=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.try-docker.outputs.using_docker != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.11"

      - name: Install dependencies and run (fallback)
        if: steps.try-docker.outputs.using_docker != 'true'
        run: |
          python -m pip install --upgrade pip -i https://mirrors.aliyun.com/pypi/simple/
          pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/
          python main.py
        env:
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
          TARGET_STOCK: ${{ secrets.TARGET_STOCK }}
          TRADE_QUANTITY: ${{ secrets.TRADE_QUANTITY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          LONGBRIDGE_APP_KEY: ${{ secrets.LONGBRIDGE_APP_KEY }}
          LONGBRIDGE_APP_SECRET: ${{ secrets.LONGBRIDGE_APP_SECRET }}
          LONGBRIDGE_ACCESS_TOKEN: ${{ secrets.LONGBRIDGE_ACCESS_TOKEN }}
