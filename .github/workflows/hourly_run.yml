name: Hourly Script Execution

on:
  schedule:
    - cron: "0 0,13 * * 1-5" # 每天0点、13点执行

  workflow_dispatch: # 手动触发
  push:
    branches:
      - master
      # - dev

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.11"

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.local/lib/python3.11/site-packages
            ~/.local/bin
          key: ${{ runner.os }}-python-packages-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-packages-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip -i https://mirrors.aliyun.com/pypi/simple/
          if [ -f requirements.txt ]; then 
            pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --cache-dir ~/.cache/pip
          fi

      - name: Run script
        run: python main.py
        env:
          PUSHPLUS_TOKEN: ${{ secrets.PUSHPLUS_TOKEN }}
          TARGET_STOCK: ${{ secrets.TARGET_STOCK }}
          TRADE_QUANTITY: ${{ secrets.TRADE_QUANTITY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          LONGBRIDGE_APP_KEY: ${{ secrets.LONGBRIDGE_APP_KEY }}
          LONGBRIDGE_APP_SECRET: ${{ secrets.LONGBRIDGE_APP_SECRET }}
          LONGBRIDGE_ACCESS_TOKEN: ${{ secrets.LONGBRIDGE_ACCESS_TOKEN }}
